---
import HeaderLink from "./HeaderLink.astro";
// import "@assets/styles/header.css";

const { default: moon } = await import(`/src/assets/icons/moon.svg?raw`);
const { default: cross } = await import(`/src/assets/icons/xmark.svg?raw`);
const { default: menu } = await import(`/src/assets/icons/bars.svg?raw`);
const { default: sun } = await import(`/src/assets/icons/sun.svg?raw`);
---

<header
  class="p-6 flex justify-center items-center sm:h-24 bg-transparent max-sm:justify-end"
  transition:animate="none"
>
  <nav class="nav center" transition:persist>
    <ul class="nav-list center">
      <HeaderLink href="/">Home</HeaderLink>
      <HeaderLink href="/about">About</HeaderLink>
      <HeaderLink href="/projects">Projects</HeaderLink>
      <HeaderLink href="/blog">Blog</HeaderLink>
      <HeaderLink href="/contact">Contact</HeaderLink>
    </ul>

    <button id="theme-toggle" type="button" aria-label="toggle theme" class="btn btn--icon">
      <Fragment set:html={moon} />
      <Fragment set:html={sun} />
    </button>

    <button type="button" aria-label="toggle navigation" class="btn btn--icon nav-hamburger">
      <Fragment set:html={menu} />
      <Fragment set:html={cross} />
    </button>
  </nav>
</header>

<script>
  const btnHamburger = document.querySelector(".nav-hamburger");
  const navUl = document.querySelector(".nav-list");
  const btnTheme = document.querySelector("#theme-toggle");

  function toggleNav() {
    btnHamburger?.children[0].classList.toggle("d-none");
    btnHamburger?.children[1].classList.toggle("d-none");
    navUl?.classList.toggle("display-nav-list");
    document.body.classList.toggle("nav-open");
  }

  function getTheme() {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  }

  toggleTheme(getTheme()!);

  function toggleTheme(theme: string) {
    document.body.setAttribute("data-theme", theme);

    if (theme === "dark") {
      document.documentElement.setAttribute("data-theme", "one-dark-pro");
    } else {
      document.documentElement.setAttribute("data-theme", "github-light");
    }

    window.localStorage.setItem("theme", theme ?? "");
  }

  const handleToggleClick = () => {
    const nextTheme = getTheme() === "dark" ? "light" : "dark";
    toggleTheme(nextTheme);
  };

  btnTheme?.addEventListener("click", handleToggleClick);

  // Navigation
  btnHamburger?.addEventListener("click", toggleNav);

  document.addEventListener("astro:page-load", () => {
    const theme = getTheme()!;
    document.body.setAttribute("data-theme", theme);
  });

  document.addEventListener("astro:after-swap", () => {
    const activeLink = document.querySelector(`.nav-list-item [href='${window.location.pathname}']`);
    activeLink?.classList.add("active");

    document.querySelector(".nav-list")?.classList.remove("display-nav-list");
    document.querySelector(".nav-hamburger")?.children[0].classList.remove("d-none");
    document.querySelector(".nav-hamburger")?.children[1].classList.add("d-none");
    document.body.classList.remove("nav-open");
  });
  document.addEventListener("astro:before-swap", () => {
    const activeLink = document.querySelector(`.nav-list-item [href='${window.location.pathname}']`);
    activeLink?.classList.remove("active");
  });
</script>

<style>
  :global([data-id="moon"]),
  :global([data-id="sun"]),
  :global([data-id="close"]),
  :global([data-id="menu"]) {
    fill: var(--clr-primary);
  }
  :global([data-id="moon"]) {
    display: var(--display-moon);
  }
  :global([data-id="sun"]) {
    display: var(--display-sun);
  }
  :global(header svg) {
    width: 16px;
  }
</style>
