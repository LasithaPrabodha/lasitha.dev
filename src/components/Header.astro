---
import HeaderLink from "./HeaderLink.astro";
import "@assets/styles/header.css";

const { default: moon } = await import(`/src/assets/icons/moon.svg?raw`);
const { default: cross } = await import(`/src/assets/icons/xmark.svg?raw`);
const { default: menu } = await import(`/src/assets/icons/bars.svg?raw`);
const { default: sun } = await import(`/src/assets/icons/sun.svg?raw`);
---

<header class="p-6 flex justify-center items-center sm:h-24 bg-transparent max-sm:justify-end">
  <nav class="nav center">
    <ul class="nav__list center">
      <HeaderLink href="/">Home</HeaderLink>
      <HeaderLink href="/about">About</HeaderLink>
      <HeaderLink href="/projects">Projects</HeaderLink>
      <HeaderLink href="/blog">Blogs</HeaderLink>
      <HeaderLink href="/contact">Contact</HeaderLink>
    </ul>

    <button id="theme-toggle" type="button" aria-label="toggle theme" class="btn btn--icon">
      <Fragment set:html={moon} />
      <Fragment set:html={sun} />
    </button>

    <button type="button" aria-label="toggle navigation" class="btn btn--icon nav__hamburger">
      <Fragment set:html={menu} />
      <Fragment set:html={cross} />
    </button>
  </nav>
</header>

<script>
  const body = document.body;
  const btnTheme = document.querySelector("#theme-toggle");
  const btnHamburger = document.querySelector(".nav__hamburger");
  const navUl = document.querySelector(".nav__list");

  type Themes = "light" | "dark";

  function isDark() {
    return body.classList.contains("dark");
  }

  function changeTheme(theme: Themes) {
    body.classList.remove("dark")
    body.classList.remove("light")
    body.classList.add(theme);

    if (theme === "light") {
      document.documentElement.setAttribute("data-theme", "github-light");
    } else {
      document.documentElement.setAttribute("data-theme", "one-dark-pro");
    }
  }

  function setTheme(theme: Themes) {
    changeTheme(theme);
    const d = new Date();
    d.setTime(d.getTime() + 365 * 86400000);
    document.cookie = `theme=${theme};expires=${d.toUTCString()};domain=lasitha.dev;path=/`;
  }

  btnTheme?.addEventListener("click", () => {
    if (isDark()) {
      setTheme("light");
    } else {
      setTheme("dark");
    }
  });

  window.addEventListener("DOMContentLoaded", () => {
    const cookies = document.cookie;
    const match = cookies.match("theme=([^;]+)");
    let theme = "light";
    if (match) {
      theme = match[1];
    }
    changeTheme(theme as Themes);
  });

  // Navigation
  function closeNav() {
    navUl?.classList.remove("display-nav-list");
    btnHamburger?.children[0].classList.remove("d-none");
    btnHamburger?.children[1].classList.add("d-none");
    body.classList.remove("nav-open");
  }

  function openNav() {
    btnHamburger?.children[0].classList.add("d-none");
    btnHamburger?.children[1].classList.remove("d-none");
    navUl?.classList.add("display-nav-list");
    body.classList.add("nav-open");
  }

  btnHamburger?.addEventListener("click", () => {
    if (btnHamburger?.children[1].classList.contains("d-none")) {
      openNav();
    } else {
      closeNav();
    }
  });
</script>

<style>
  :global([data-id="moon"]),
  :global([data-id="sun"]),
  :global([data-id="close"]),
  :global([data-id="menu"]) {
    fill: var(--clr-primary);
  }
  :global([data-id="moon"]) {
    display: var(--display-moon);
  }
  :global([data-id="sun"]) {
    display: var(--display-sun);
  }
  :global(header svg) {
    width: 16px;
  }
</style>
