---
import type { Link } from "../interfaces/Link";
import IconLink from "./IconLink.astro";

const { data, links } = Astro.props;
const { title, description, technologies } = data;
---

<div class="project" data-link={links[0].href}>
  <h3>{title}</h3>
  <p class="project__description">{description}</p>

  <div class="flex justify-between">
    <ul class="project__stack">
      {technologies.map((t: string) => <li class="project__stack-item">{t}</li>)}
    </ul>
    <div class="project-links flex items-center">
      {links.map((l: Link) => <IconLink href={l.href} icon={l.icon} ariaLabel={l.ariaLabel} />)}
    </div>
  </div>
</div>
<style>
  .project {
    cursor: pointer;
    margin: 0 auto;
    display: flex;
    flex-direction: column;
    background-color: var(--clr-bg);
  }

  .project__description {
    margin-top: 1em;
    margin-bottom: 1em;
    flex: 1;
  }

  .project__stack {
    margin-bottom: 0.5em;
    display: flex;
    flex-wrap: wrap;
  }

  .project__stack-item {
    margin-right: 0.5em;
    margin-top: 0.5em;
    font-weight: 500;
    font-size: 0.6rem;
    color: var(--clr-quote);
    border: 1px solid;
    padding: 0 0.5em;
    border-radius: 5px;
  }

  a {
    margin-right: 0.5em;
  }
  :global(.project-links svg) {
    fill: var(--clr-quote);
    font-size: 1.2rem;
    width: 16px;
    height: 16px;
  }
</style>
<script>
  const projects = document.querySelectorAll(".project");

  projects.forEach((link) => {
    link.addEventListener("click", (event) => {
      const project = (event.target as Element).closest(".project") as HTMLElement;
      const link = project?.dataset.link;
      window.open(link, "_blank")?.focus();
    });
  });
</script>
