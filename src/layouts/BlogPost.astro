---
import FormattedDate from "../components/FormattedDate.astro";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import { getCollection } from "astro:content";

import "../assets/styles/blog.css";
import "../assets/styles/dark-gist.css";

const theme = Astro.cookies.get("theme")?.value ?? "light";

// type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, ...props } = Astro.props;
const { default: back } = await import(`/src/assets/icons/angle-left.svg?raw`);
const { default: up } = await import(`/src/assets/icons/angles-up.svg?raw`);

const posts = (await getCollection("blog"))
  .sort(() => Math.random() - 0.5)
  .filter((p) => p.data.title !== title)
  .slice(0, 2);
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
  </head>
  <body class={theme} id="top">
    <!-- Google Tag Manager (noscript) -->
    <noscript
      ><iframe
        src="https://www.googletagmanager.com/ns.html?id=GTM-WTKBZNLF"
        height="0"
        width="0"
        style="display:none;visibility:hidden"></iframe></noscript
    >
    <!-- End Google Tag Manager (noscript) -->
    <Header />
    <main {...props} class="bg-transparent sm:mt-6 max-sm:p-6 max-w-[700px] w-full m-auto box-border mb-40 max-sm:mb-8">
      <div class="go-back mb-8">
        <a href="/blog" class="flex gap-2">
          <Fragment set:html={back} /> Back to Blogs
        </a>
      </div>
      <article>
        <div class="flex flex-col justify-center flex-1">
          <div class="title">
            <div class="date">
              <FormattedDate date={pubDate} />
              {
                updatedDate && (
                  <div class="last-updated-on">
                    Last updated on <FormattedDate date={updatedDate} />
                  </div>
                )
              }
            </div>
            <h1>{title}</h1>
            <hr />
          </div>
          <slot />
        </div>
      </article>
      <div class="py-12">
        <h2>Keep reading</h2>
        <div class="pt-10 grid gap-16 lg:grid-cols-2 lg:gap-x-8 lg:gap-y-12">
          {
            posts.map((post: any) => (
              <a class="" href={`/blog/${post.slug}/`}>
                <div class="mb-2">
                  <h4>{post.data.title}</h4>
                  <FormattedDate date={post.data.pubDate} />
                </div>
              </a>
            ))
          }
        </div>
      </div>
    </main>
    <div class="scroll-container">
      <div class="scroll-top">
        <a aria-label="Scroll up" href="#top">
          <Fragment set:html={up} />
        </a>
      </div>
    </div>

    <script>
      document.addEventListener("scroll", () => {
        const btnScrollTop = document.querySelector<HTMLElement>(".scroll-top");

        if (!btnScrollTop) return;

        if (document.body?.scrollTop > 500 || document.documentElement.scrollTop > 500) {
          btnScrollTop.style.display = "block";
        } else {
          btnScrollTop.style.display = "none";
        }
      });
    </script>
  </body>
</html>
