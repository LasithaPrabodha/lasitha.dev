---
import Page from "@layouts/Page.astro";
import Project from "@components/Project.astro";
import RectPattern from "@components/RectPattern.astro";
import { SITE_DESCRIPTION, SITE_TITLE } from "consts";
import { getCollection } from "astro:content";
import type { Link } from "interfaces/Link";

const { default: eye } = await import(`/src/assets/icons/eye.svg?raw`);
const { default: book } = await import(`/src/assets/icons/book.svg?raw`);
const { default: github } = await import(`/src/assets/icons/github.svg?raw`);

const icons: { [key: string]: string } = { eye, book, github };

const professionalProjects = (await getCollection("professional-projects")).sort((a, b) => a.data.id - b.data.id);
const personalProjects = await getCollection("personal-projects");
---

<Page title={"Projects - " + SITE_TITLE} description={SITE_DESCRIPTION} addNight={true}>
  <section
    id="projects"
    class="bg-transparent flex flex-col justify-center flex-1 w-full m-auto box-border p-6 pt-12 pb-6 max-w-[900px] max-sm:pb-8"
  >
    <h2 class="section__title font-bold">Projects</h2>

    <h3 class="mt-8 font-semibold text-center uppercase">Professional Projects</h3>
    <div class="py-12 grid gap-12 lg:grid-cols-2 lg:gap-x-8 lg:gap-y-20">
      {
        professionalProjects.map((project) => (
          <Project {...project} links={project.data.links.map((l: Link) => ({ ...l, icon: icons[l.icon] }))} />
        ))
      }
    </div>
    <h3 class="mt-16 font-semibold text-center uppercase">Personal Projects</h3>
    <div class="py-12 grid gap-12 lg:grid-cols-2 lg:gap-x-8 lg:gap-y-20">
      {
        personalProjects.map((project) => (
          <Project {...project} links={project.data.links.map((l: Link) => ({ ...l, icon: icons[l.icon] }))} />
        ))
      }
    </div>

    <RectPattern width={250} height={250} id="rect-left" />
    <RectPattern width={260} height={260} id="rect-left-bottom" />
    <RectPattern width={230} height={230} id="rect-right" />
  </section>

  <style>
    :global(#projects > #rect-right) {
      position: absolute;
      right: 0;
      top: calc(100vh / 2);
      z-index: -1;
    }
    :global(#projects > #rect-left) {
      position: absolute;
      left: 0;
      top: -120px;
      z-index: -1;
    }
    :global(#projects > #rect-left-bottom) {
      position: absolute;
      left: 0;
      bottom: calc(100vh / 2);
      z-index: -1;
    }
    :global(#projects:has(.project:hover) .project){
      opacity: 0.5;
    }
    .projects__grid {
      max-width: 1100px;
      margin: 0 auto;
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(18em, 1fr));
      grid-gap: 2em;
      width: 100%;
    }

    h3 {
      color: var(--clr-fg);
    }
    @media (max-width: 640px) {
      #projects {
        padding-bottom: 2em;
      }

      :global(#projects > #rect-left) {
        top: 300px;
      }

      :global(#projects > #rect-right) {
        top: unset;
      }
      :global(#projects > #rect-left-bottom) {
        bottom: 0;
      }
    }
  </style>
</Page>
